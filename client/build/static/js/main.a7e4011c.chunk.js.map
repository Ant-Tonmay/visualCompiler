{"version":3,"sources":["interpreter/tokenWrappers.js","components/Menu.jsx","components/CodeEditor.jsx","components/ToolBar.jsx","components/runtime/ActivationRecord.jsx","components/runtime/Runtime.jsx","components/ExecutionBoard.jsx","components/Body.jsx","components/Header.jsx","App.jsx","reportWebVitals.js","index.js","interpreter/interpreter.js","components/OutputBox.jsx","interpreter/regularExpression.js","interpreter/utility.js","interpreter/tokenizer.js"],"names":["module","exports","ExpressionWrapper","expression","from","to","this","type","value","ConditionWrapper","condition","nextIfFalse","VariableWrapper","variableDetails","name","datatype","ReturnWrapper","returnDetails","returnType","FunctionWrapper","functionDetails","functionName","args","LibFunctionWrapper","Menu","items","toggleMenuStatus","style","height","width","background","position","top","left","onClick","zIndex","codewrapper","CodeEditor","handleChange","editor","data","props","onChange","onBeforeChange","className","options","lineWrapping","lint","mode","language","lineNumbers","theme","React","Component","toolbarStyle","display","flex","padding","flexDirection","selectStyle","outline","borderRadius","codeHeader","marginLeft","fontSize","fontWeight","alignItems","right","minExeBoard","justifyContent","ToolBar","onSelect","onMaximize","onRun","onNext","e","target","margin","id","formatData","formattedData","key","push","console","log","ActivationRecord","map","el","Runtime","virtualCallStack","frame","index","reverse","taskbarStyle","widht","calsStyle","collapseStyle","containStyle","divider","codeEditorWrapper","flexBasis","visualsWrap","visuals","Body","state","code","ExeBoard","output","programCounter","val","Interpreter","setState","handleOutputChange","handleSelect","handleExeBoardToggle","handleRunCode","a","fetch","method","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","res","err","tokenizeCode","initCallStack","handleNext","readToken","init","toggleState","OutputBox","Header","header","fontFamily","Button","color","App","menuStatus","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","codeMirror","querySelectorAll","Array","returnValueOfFunction","lastMark","tempReturnAddress","currentCall","accumulator","self","tokenizer","CLikeInterpreterUtilities","mapIndexVsLine","token","createFunctionMap","length","pop","prevState","currInstruction","processVariable","processExpression","processFunctionCall","processReturn","processCondition","updateMark","instruction","initialValue","activeStackFrame","operandExp","operandDetails","modifiedExpression","start","exec","i","input","operand","match","replace","lastIndex","debug","eval","argQueue","forEach","arg","func","returnAddress","parameters","param","details","adjustFromTo","line","ch","clear","markText","outputwrapper","require","dataType","identifier","optionalWhiteSpace","functionSignatureDetector","RegExp","functionCallDetector","variableDetector","functionParamsDetector","whileloopDetector","partialForLoopDetector","forloopDetector","ifDetector","elseIfDetector","elseDetector","expressionDetector","returnStatementDetector","includeDetector","macroDefinitionDetector","Tokenizer","extractBody","functionSignEndsAt","startOfBody","braceBalance","endOfBody","functionBody","statements","split","getMacroMap","matches","matcheMap","Map","set","indexVsLine","getLineColumn","intermediateCode","tokenizeBody","tokenizeParameters","flowGraph","trim","libFunctions","lastTokenStack","statementDetails","unspecifiedJumps","currentPos","firstStatementIndex","statement","tokenizeForLoop","tokenizeWhileLoop","tokenizeIfElseLadder","tokenizeReturnStatement","tokenizeFunctionCall","tokenizeExpression","tokenizeVariable","setFromTo","find","column","params","paramsList","tokenizeForLoopInitialization","slice","tokenizeCondition","tokenizeForLoopIncrementDecrement","pendingTaskArr","incrementDecrement","conditionIndexInFlowGraph","firstStatementOfForLoopBody","concat","bodyEndsAtIndex","conditionStartsAtIndex","bodyStartsAt","addEndOfCurlyBraceAtBegining","prevUnspecifiedJump"],"mappings":"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","file":"static/js/main.a7e4011c.chunk.js","sourcesContent":["function ExpressionWrapper(expression, from, to) {\n  this.type = \"expression\";\n  this.value = expression;\n  this.from = from;\n  this.to = to;\n}\nfunction ConditionWrapper(condition, from, to) {\n  this.type = \"condition\";\n  this.value = condition;\n  this.nextIfFalse = null;\n  this.from = from;\n  this.to = to;\n}\n\nfunction VariableWrapper(variableDetails, from, to) {\n  this.type = \"variable\";\n  this.name = variableDetails[3];\n  this.datatype =\n    variableDetails[1] + (variableDetails[2] ? variableDetails[2] : \"\");\n  this.from = from;\n  this.to = to;\n}\n\nfunction ReturnWrapper(returnDetails, from, to) {\n  this.type = \"return\";\n  this.value = `$=${returnDetails.value}`;\n  this.returnType = returnDetails.returnType;\n  this.from = from;\n  this.to = to;\n}\nfunction FunctionWrapper(functionDetails, from, to) {\n  this.type = functionDetails.type;\n  this.name = functionDetails.functionName;\n  this.args = functionDetails.args;\n  this.from = from;\n  this.to = to;\n}\nfunction LibFunctionWrapper(functionDetails, from, to) {\n  this.type = \"lib_function_call\";\n  this.name = functionDetails.functionName;\n  this.args = functionDetails.args;\n  this.from = from;\n  this.to = to;\n}\n\nmodule.exports = {\n  ExpressionWrapper,\n  ConditionWrapper,\n  VariableWrapper,\n  ReturnWrapper,\n  FunctionWrapper,\n  LibFunctionWrapper,\n};\n","import React from \"react\";\n\n\n\n\nexport default function Menu({items, toggleMenuStatus}) {\n    const style = {\n        height: '100vh',\n        width: '30vw',\n        background: '#00fff0',\n        position: 'absolute',\n        top: '0',\n        left: '-10',\n        zIndex: '4'\n    }; \n    const overlay = {\n        height: '100vh',\n        width: '100vw',\n        background: '#000000AA',\n        position: 'absolute',\n        top: '0',\n        left: '0'\n    }\n    return (\n        <>\n            {/* overlay */}\n            <div style={overlay} onClick={toggleMenuStatus}>\n\n            </div>\n            {/*Menu*/}\n            <div style={style}>\n\n            </div>\n            \n        </>\n    );\n}","import React from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\n\nimport '../customStyle.css'\n\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\nimport 'codemirror/mode/clike/clike';\nimport 'codemirror/mode/javascript/javascript';\n\nconst codewrapper = {\n    height: '300px',\n   \n}\n\nexport default class CodeEditor extends React.Component {\n    \n    handleChange = (editor, data, value) =>{\n        \n        this.props.onChange(value, editor);\n    }\n    \n    render() {\n        return (\n            <div style={codewrapper}>\n                \n                <ControlledEditor \n                key={'mainEditor'}\n                onBeforeChange={this.handleChange}\n                value={this.props.value}\n                className=''\n                options={\n                    {\n                        lineWrapping: true,\n                        lint: true,\n                        mode: this.props.language,\n                        lineNumbers: true,\n                        theme: 'material'\n                         \n                    }\n                }\n                \n                // selection={{\n                //     ranges: [{\n                //       anchor: {ch: 1, line: 1},\n                //       head: {ch: 3, line: 3}\n                //     }],\n                //     focus: true // defaults false if not specified\n                //   }}\n                  //onSelection={(editor, data) => {this.highlightLines(editor, 1, 1)}}\n                \n                />\n            </div>\n        );\n    }\n    \n}","\n\nconst toolbarStyle = {\n    height: '60px',\n    display: 'flex',\n    // background: '#000'\n}\nconst left = {\n    \n    display: 'flex',\n    flex: '2',\n    padding: '5px',\n    // background: 'grey',\n    flexDirection: 'column'\n}\n\nconst selectStyle = {\n    width: '150px',\n    height: '30px',\n    outline: 'none',\n    borderRadius: '5%'\n\n}\nconst codeHeader = {\n    marginLeft: '2px',\n    fontSize: '15px',\n    height: '50%',\n    display: 'flex',\n    fontWeight: 'bold',\n    alignItems: 'center',\n    \n}\nconst right = {\n    display: 'flex',\n    flex: '3',\n    padding: '5px',\n    position: 'relative'\n}\nconst minExeBoard = {\n    height: '35px',\n    width: '100px',\n    background: '#d43a1c99',\n    display:'flex',\n    justifyContent: 'right',\n    position: 'absolute',\n    top: '25px',\n    left: '500px'\n}\nexport default function ToolBar(props) {\n    const {\n        onSelect,\n        onMaximize,\n        onRun,\n        onNext\n    } = props;\n    function handleChange(e) {\n        onSelect(e.target.value);\n    }\n    function handleMaximize() {\n        onMaximize();\n    }\n    function handleRun() {\n        onRun();\n    }\n    function handleNext() {\n        onNext();\n    }\n\n    return (\n        <div key={'toolbar'} style={toolbarStyle}>\n            <div key={'left'} style={left}>\n                \n                <select style={selectStyle} onChange={handleChange}>\n                    <option value='lang'>Languages</option>\n                    <option value='clike'>C</option>\n                    <option value='clike'>C++</option>\n                    <option value='javascript'>JavaScript</option>\n                </select>\n                <div key={'codeHeader'} style={codeHeader}>\n                    <p>Code</p>\n                    <button style={{margin:'2px'}} onClick={handleRun}>Run</button>\n                    <button style={{margin:'2px'}} onClick={handleNext}>Next</button>\n                    <button style={{margin:'2px'}}>Pause</button>\n                </div>\n            </div>\n            <div key={'right'} style={right}>\n                <div style={minExeBoard} id=\"minExeBoard\" key={\"minExeBoard\"}>\n                    <button id=\"maximize\" onClick={handleMaximize}>Max</button>\n                </div>\n            </div>\n        </div>\n    )\n}  ","import \"./runtime.css\";\nfunction formatData(data) {\n  let formattedData = [];\n  for (let key in data) {\n    formattedData.push({\n      name: key,\n      value: data[key].value,\n    });\n  }\n  console.log(formattedData);\n  return formattedData;\n}\nexport default function ActivationRecord(props) {\n  return (\n    <div className=\"activationRecords\">\n      <div className=\"funcName\">{props.functionName}</div>\n\n      <div className=\"variable-cont\">\n        {formatData(props.data).map(el => (\n          <div key={el.name} className=\"variable\">\n            <div className=\"varName\">{el.name}</div>\n            <div className=\"varValue\">{el.value}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import ActivationRecord from \"./ActivationRecord\";\nimport \"./runtime.css\";\nimport React from \"react\";\n\nexport default class Runtime extends React.Component {\n  // state = {\n  //     virtualCallStack: new Array(),\n  //     virtualHeap: new Array(),\n\n  //     virtualDataSegment: new Array(),\n  //     virtualBSS: new Array()\n  // }\n\n  render() {\n    return (\n      <div className=\"visualWrapper\" key={\"visualWrapper\"}>\n        <div className=\"callStack-wrapper\">\n          <h5>Call Stack</h5>\n          <div className=\"callStack\" key={\"callstack\"}>\n            {/* <ActivationRecord /> */}\n            {this.props.virtualCallStack\n              .map((frame, index) => (\n                <ActivationRecord\n                  key={frame.name + index}\n                  functionName={frame.name}\n                  data={frame.data}\n                />\n              ))\n              .reverse()}\n          </div>\n        </div>\n        <div className=\"heap\" key={\"heap\"}>\n          <h5>Heap</h5>\n        </div>\n        <div className=\"data\" key={\"data\"}>\n          <h5>Data</h5>\n        </div>\n        <div className=\"bss\" key={\"bss\"}>\n          <h5>bss</h5>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nconst taskbarStyle = {\n    height: '30px',\n    widht: '400px'\n};\n\nconst calsStyle = {\n    height: '170px',\n    widht: '400px',\n\n};\n\nconst collapseStyle = {\n\n};\nexport default class ExecutionBoard extends React.Component {\n    constructor(props) {\n        \n        super(props);\n        this.boardRef = React.createRef();\n    }\n    state = {\n        position: {\n            top: 0,\n            left: 0\n        },\n        mouseDown: false\n    }\n    handleMouseDown = () => {\n        this.setState({mouseDown: true})\n    }\n    handleMouseUp = () => {\n        this.setState({mouseDown: false});\n    }\n    handleDrag = (e) => {\n        if(this.state.mouseDown) {\n            if(Math.abs(e.nativeEvent.offsetX - this.state.position.left) <= 20 || Math.abs(e.nativeEvent.offsetY - this.state.position.top) <= 20)\n                return;\n            this.setState({\n                    position:{\n                        top: e.nativeEvent.offsetY, \n                        left: e.nativeEvent.offsetX\n                    }   \n                }\n            );\n            \n            \n        }\n    }\n    \n    render() {\n\n        let boardStyle = {\n            position: 'absolute',\n            height: '200px',\n            width: '400px',\n            top: '0px',\n            left: '0px',\n            background: '#d43a1c99'\n        };\n\n        boardStyle.top = this.state.position.top + 'px';\n        boardStyle.left = this.state.position.left + 'px';\n        //console.log(boardStyle.top, boardStyle.left);\n        return( \n        <div key={'exeBoard'}\n            id={'exeBoard'}\n            ref={this.boardRef}\n            style={boardStyle} \n            onMouseDown={this.handleMouseDown} \n            onMouseMove={this.handleDrag} \n            onMouseUp={this.handleMouseUp}\n            // onMouseOut={this.handleMouseUp}\n        >\n            <div key={'taskbar'} style={taskbarStyle}>\n                <button key={'collapse'} style={collapseStyle} onClick={this.props.onMinimize}>Collapse</button>\n            </div>\n            <div key={'cals'} style={calsStyle}>\n\n            </div>\n        </div> \n        )\n    }\n}","import React from \"react\";\nimport Menu from \"./Menu\";\nimport CodeEditor from \"./CodeEditor\";\nimport OutputBox from \"./OutputBox\";\nimport ToolBar from \"./ToolBar\";\nimport Runtime from \"./runtime/Runtime\";\nimport ExecutionBoard from \"./ExecutionBoard\";\nimport Interpreter from \"../interpreter/interpreter\";\nconst containStyle = {\n  width: \"100vw\",\n  height: \"100vh\",\n  display: \"flex\",\n};\nconst divider = {\n  height: \"30px\",\n  width: \"100%\",\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: \"5px\",\n  fontWeight: \"bold\",\n};\n\nconst codeEditorWrapper = {\n  flex: \"2\",\n  flexBasis: \"0\",\n  display: \"flex\",\n  flexDirection: \"column\",\n};\n\nconst visualsWrap = {\n  flex: \"3\",\n  flexBasis: \"0\",\n  display: \"flex\",\n  flexDirection: \"column\",\n};\nconst visuals = {\n  position: \"relative\",\n  height: \"100%\",\n  width: \"100%\",\n  top: \"0\",\n  left: \"0\",\n};\n\nexport default class Body extends React.Component {\n  state = {\n    code: \"\",\n    language: \"text\",\n    ExeBoard: false,\n    output: \"\",\n\n    top: -1,\n    programCounter: 0,\n  };\n\n  constructor(props) {\n    super(props);\n    Interpreter.init(this);\n  }\n  handleChange = (val, editor) => {\n    Interpreter.editor = editor;\n    this.setState(state => {\n      return (state.code = val);\n    });\n    // console.log(this.state.value);\n  };\n  handleOutputChange = val => {\n    this.setState({ output: val });\n  };\n  handleSelect = language => {\n    this.setState({ language });\n    console.log(this.state.language);\n  };\n  handleExeBoardToggle = () => {\n    this.setState(() => ({ ExeBoard: !this.state.ExeBoard }));\n  };\n  handleRunCode = async () => {\n    this.setState({ output: \"Compiling...\" });\n    const response = await fetch(\"http://localhost:3001/api/compile\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify({\n        code: this.state.code,\n        language: this.state.language,\n      }),\n    });\n    let res = await response.json();\n    if (res.err) {\n      console.log(res.err);\n      this.setState({ output: res.err });\n      return;\n    }\n    console.log(\"code compiled\");\n    this.setState({ output: \"code compiled\" });\n    //initializing stack frame\n    Interpreter.tokenizeCode(this.state.code);\n    Interpreter.initCallStack();\n  };\n  handleNext = () => {\n    console.log(\"next\");\n    Interpreter.readToken();\n  };\n\n  render() {\n    const { toggleState, toggleMenuStatus } = this.props;\n    const items = [1, 2, 3];\n    return (\n      <>\n        <ToolBar\n          onSelect={this.handleSelect}\n          onMaximize={this.handleExeBoardToggle}\n          onRun={this.handleRunCode}\n          onNext={this.handleNext}\n        />\n        <div className=\"body\" key={\"body\"}>\n          <div key={\"contains\"} style={containStyle}>\n            <div key={\"codeEditorWrapper\"} style={codeEditorWrapper}>\n              <CodeEditor\n                key={\"editor\"}\n                value={this.state.code}\n                onChange={this.handleChange}\n                language={this.state.language}\n              />\n              <div key={\"divider\"} style={divider}>\n                Output\n              </div>\n              <OutputBox\n                value={this.state.output}\n                onChange={this.handleOutputChange}\n              />\n            </div>\n\n            <div key={\"visualsWrap\"} style={visualsWrap}>\n              <div key={\"visual\"} style={visuals}>\n                <Runtime virtualCallStack={Interpreter.virtualCallStack} />\n                {/* { this.state.ExeBoard ?  <ExecutionBoard onMinimize={this.handleExeBoardToggle} /> : <></>} */}\n              </div>\n            </div>\n          </div>\n\n          {toggleState ? (\n            <Menu items toggleMenuStatus={toggleMenuStatus} />\n          ) : (\n            <></>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","import ListOutlinedIcon from '@mui/icons-material/ListOutlined';\nimport Button from '@mui/material/Button';\n\n\n\nexport default function Header({toggleState, toggleMenuStatus}) {\n    const header = {\n        display: 'flex',\n        \n        justifyContent: 'center',\n        fontFamily: 'sans-serif',\n        justifyContent: 'left',\n        alignItems: 'center',\n        //boxShadow: '2px 2px grey',\n        height: '40px',\n        background: '#113f73',\n        color: '#fff',\n        borderRadius: '0px 0px 20px 20px'\n      }\n    \n    return (\n        <>\n        \n        <header style = {header}>\n            <Button onClick={toggleMenuStatus}>\n                <ListOutlinedIcon color='primary' fontSize='large'/> \n            </Button>\n            <h3>Visual Compiler</h3>\n        </header>\n        </>\n    );\n}\n","import Body from './components/Body';\nimport Header from './components/Header';\nimport React from 'react';\n\n\nclass App extends React.Component{\n  state = {\n    menuStatus: false\n  };\n  toggleMenuStatus = () => {\n    this.setState((state) => ({menuStatus: !state.menuStatus}));\n    console.log(this.state.menuStatus);\n\n  }\n\n  render() {\n  return (\n  <>\n  <Header toggleState={this.state.menuStatus} toggleMenuStatus={this.toggleMenuStatus}/>\n  \n  <Body toggleState={this.state.menuStatus} toggleMenuStatus={this.toggleMenuStatus}/>\n  </>\n  \n  );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nconst codeMirror = document.querySelectorAll('.CodeMirror');\ncodeMirror[0].style.height = '300px';\ncodeMirror[1].style.height = '200px';\ncodeMirror[1].style.background = '#0f0f0f';\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import OutputBox from \"../components/OutputBox\";\nimport { CLikeInterpreterUtilities } from \"./utility\";\n//import token from \"./token2.sample\";\n\nexport default class Interpreter {\n  static virtualCallStack = new Array();\n  static returnValueOfFunction = null;\n  static editor = null;\n  static lastMark = null;\n  static tempReturnAddress = null;\n  static currentCall = \"main\";\n  static accumulator = 0;\n\n  static init = (self, code) => {\n    this.self = self;\n  };\n  static initCallStack = () => {\n    const func = {\n      name: \"main\",\n      data: {},\n    };\n    console.log(\"self\", this.self);\n    this.virtualCallStack.push(func);\n    this.self.setState({ top: 0 });\n  };\n  static tokenizeCode = code => {\n    let tokenizer = new CLikeInterpreterUtilities(code);\n    tokenizer.mapIndexVsLine();\n    this.token = tokenizer.createFunctionMap();\n  };\n  static readToken = () => {\n    console.log(this.self.state.programCounter);\n    if (\n      this.self.state.programCounter >=\n      this.token[this.currentCall][\"body\"].length\n    ) {\n      this.virtualCallStack.pop();\n      if (this.virtualCallStack.length === 0) {\n        console.log(\"execution complete\");\n        this.self.setState(prevState => ({\n          output: prevState.output + \"\\nExecution completed!!\",\n        }));\n        return;\n      }\n    }\n    this.currInstruction =\n      this.token[this.currentCall][\"body\"][this.self.state.programCounter];\n\n    console.log(this.currInstruction);\n    if (this.currInstruction.type === \"variable\") {\n      this.processVariable(this.currInstruction);\n    } else if (this.currInstruction.type === \"expression\") {\n      this.processExpression(this.currInstruction.value);\n    } else if (this.currInstruction.type === \"function_call\") {\n      this.processFunctionCall();\n      return;\n    } else if (this.currInstruction.type === \"lib_function_call\") {\n    } else if (this.currInstruction.type === \"return\") {\n      this.processReturn();\n      return;\n    } else if (this.currInstruction.type === \"condition\") {\n      this.processCondition();\n      return;\n    }\n    this.updateMark();\n    //this line will update UI\n    if (this.currInstruction.type === \"jump\") {\n      this.self.setState(prevState => ({\n        programCounter: this.currInstruction.instruction,\n      }));\n      return;\n    }\n    this.self.setState(prevState => ({\n      programCounter: prevState.programCounter + 1,\n    }));\n  };\n  static processCondition = () => {\n    this.processExpression(this.currInstruction.value);\n    if (this.accumulator) {\n      this.updateMark();\n      this.self.setState(prevState => ({\n        programCounter: prevState.programCounter + 1,\n      }));\n\n      return;\n    }\n    this.updateMark();\n    this.self.setState({ programCounter: this.currInstruction.nextIfFalse });\n  };\n  static processVariable = ({ name, initialValue, datatype }) => {\n    let top = this.virtualCallStack.length - 1;\n    this.virtualCallStack[top].data[name] = {\n      value: initialValue,\n      datatype,\n    };\n    console.log(\"vs\", this.virtualCallStack);\n  };\n  static processExpression = expression => {\n    console.log(\"expression\");\n    let top = this.virtualCallStack.length - 1;\n    let activeStackFrame = this.virtualCallStack[top].data;\n    let operandExp = /\\$|\\w+/g;\n    let operandDetails = null;\n    let modifiedExpression = \"\";\n    let start = 0;\n    while ((operandDetails = operandExp.exec(expression))) {\n      for (let i = start; i < operandDetails.index; i++)\n        modifiedExpression += operandDetails.input[i];\n      let operand = operandDetails[0];\n      if (operand == \"$\") {\n        modifiedExpression += \"this.returnValueOfFunction\";\n      } else if (operand.match(/\\d+/)) {\n        modifiedExpression += operand;\n      } else {\n        modifiedExpression += operand.replace(\n          operand,\n          `activeStackFrame['${operand[0]}'].value`\n        );\n      }\n      start = operandExp.lastIndex;\n      console.debug(start);\n      console.log(modifiedExpression);\n    }\n    console.log(\"modifiedExpression\", modifiedExpression);\n    this.accumulator = eval(modifiedExpression);\n    console.log(this.accumulator);\n  };\n  static processFunctionCall = () => {\n    let argQueue = [];\n    this.currInstruction.args.forEach(arg => {\n      argQueue.push(this.virtualCallStack[this.self.state.top].data[arg].value);\n    });\n    console.log(argQueue);\n    this.currentCall = this.currInstruction.name;\n    const func = {\n      name: this.currentCall,\n      data: {},\n      returnAddress: this.self.state.programCounter + 1,\n    };\n    this.virtualCallStack.push(func);\n    this.self.setState(prevState => ({ top: prevState.top + 1 }));\n    const { parameters } = this.token[this.currentCall];\n    if (parameters.length > 0) {\n      parameters.forEach((param, index) => {\n        let details = {\n          name: param.name,\n          initialValue: argQueue[index],\n          datatype: param.datatype,\n        };\n        console.log(this.self.state.top);\n        this.processVariable(details);\n      });\n    }\n    this.self.setState({ programCounter: 0 });\n  };\n  static processReturn = () => {\n    let top = this.virtualCallStack.length - 1;\n    this.tempReturnAddress = this.virtualCallStack[top].returnAddress;\n    this.currentCall = this.virtualCallStack[top - 1].name;\n    console.log(this.tempReturnAddress);\n    if (this.currInstruction.returnType !== \"void\") {\n      this.processExpression(this.currInstruction.value);\n      this.virtualCallStack.pop();\n    }\n    this.self.setState({ programCounter: this.tempReturnAddress });\n  };\n  static adjustFromTo = () => {\n    let lineAdjustment = -1;\n    let colAdjustment = -2;\n    let from = {},\n      to = {};\n    from.line = this.currInstruction.from.line + lineAdjustment;\n    to.line = this.currInstruction.to.line + lineAdjustment;\n    from.ch = this.currInstruction.from.ch + colAdjustment;\n    to.ch = this.currInstruction.to.ch + colAdjustment;\n    return {\n      from,\n      to,\n    };\n  };\n  static updateMark = () => {\n    if (!this.currInstruction.from || !this.currInstruction.from) return;\n    let { from, to } = this.adjustFromTo();\n    console.log(this.editor);\n    if (this.self.lastMark) this.self.lastMark.clear();\n    this.self.lastMark = this.editor.markText(from, to, {\n      className: \"codemirror-highlighted\",\n    });\n  };\n}\n//test area\n// setTimeout(() => {\n//   console.log(Interpreter.self);\n// Interpreter.processExpression(\"a = b * c + k\");\n//   Interpreter.initCallStack();\n//   Interpreter.processVariable(\"a\", 5, \"int\");\n//   Interpreter.processVariable(\"b\", 7, \"float\");\n// }, 1000);\n","import react from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\n\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\n\nconst outputwrapper = {\n    height: '200px'\n}\n\nexport default function OutputBox(props) {\n    const {\n        value,\n        onChange\n    } = props;\n    function handleChange(editor, data, value) {\n        onChange(value);\n    }\n    return (\n            <div key={'outputwrapper'} style={outputwrapper}>\n                \n                <ControlledEditor \n                key={'outputbox'}\n                onBeforeChange={handleChange}\n                value={value}\n                \n                className=''\n                options={\n                    {\n                        lineWrapping: true,\n                        theme: 'material',\n                        mode:''\n                    }\n                }\n                \n                />\n            </div>\n    );\n}","const { param } = require(\"express/lib/request\");\n\nconst dataType = \"((?:\\\\w+\\\\**\\\\s+\\\\**)+)(\\\\s*\\\\**)*\";\nconst identifier = \"(\\\\w+)\";\nconst optionalWhiteSpace = \"\\\\s*\\\\t*\\\\n*\";\nconst parameters = \"\\\\((.*)\\\\)\"; //loose fix\nconst includeDetector = /#include.+/gm;\nconst macroDefinitionDetector = /#define\\s(\\w+)\\s+(.+)/g;\n\nconst functionSignatureDetector = new RegExp(\n  `${dataType}(${optionalWhiteSpace})${identifier}(${optionalWhiteSpace})${parameters}${optionalWhiteSpace}\\\\{`,\n  \"gm\"\n);\nconst functionCallDetector = new RegExp(\n  `${identifier}${optionalWhiteSpace}${parameters}`,\n  \"\"\n);\n\n// const multiVariableDefinationDetector = new RegExp(`(int)\\*?\\s((\\w+(\\[(\\d+|\\w+)\\])?(\\s*?=\\s*(\\d+|'.+|\".+\"|\\w+|\\{.\\}))?\\s*[,;]\\s*)+)`);\nconst variableDetector = new RegExp(\n  `${dataType}${optionalWhiteSpace}${identifier}`\n);\n//const parameters = new RegExp(`\\\\(${variableDetector}\\\\)`);\nconst functionParamsDetector = new RegExp(parameters, \"g\");\n\nconst whileloopDetector = new RegExp(`while${optionalWhiteSpace}${parameters}`);\nconst partialForLoopDetector = new RegExp(`for${optionalWhiteSpace}\\\\(.*`);\nconst forloopDetector = new RegExp(`for${optionalWhiteSpace}${parameters}`);\nconst ifDetector = new RegExp(`if${optionalWhiteSpace}${parameters}`);\nconst elseIfDetector = new RegExp(`else if${optionalWhiteSpace}${parameters}`);\nconst elseDetector = new RegExp(`else`);\n\nconst expressionDetector = new RegExp(\n  `(\\\\d*\\\\w*${optionalWhiteSpace}[-/+*=<>]+${optionalWhiteSpace}\\\\d*\\\\w*)+`\n);\nconst returnStatementDetector = new RegExp(\n  `return\\\\s${optionalWhiteSpace}(.+${optionalWhiteSpace})*`\n);\nconsole.log(\"-------------debug--------------------\");\nconsole.log(\"functionSignatureDetector\", functionSignatureDetector);\nconsole.log(\"functionCallDetector\", functionCallDetector);\nconsole.log(\"whileloopDetector\", whileloopDetector);\nconsole.log(\"forloopDetector\", forloopDetector);\nconsole.log(\"if detector\", ifDetector);\nconsole.log(\"else if detector\", elseIfDetector);\nconsole.log(\"else detector\", elseDetector);\nconsole.log(\"variable detector\", variableDetector);\nconsole.log(\"returnStatementDetector\", returnStatementDetector);\nconsole.log(\"expressionDetector\", expressionDetector);\nconsole.log(\"-------------end--------------------\");\n\nmodule.exports = {\n  includeDetector,\n  macroDefinitionDetector,\n  functionCallDetector,\n  functionSignatureDetector,\n  whileloopDetector,\n  partialForLoopDetector,\n  forloopDetector,\n  ifDetector,\n  elseIfDetector,\n  elseDetector,\n  variableDetector,\n  expressionDetector,\n  returnStatementDetector,\n  functionParamsDetector,\n};\n","//const { code } = require(\"./fail.sample.js\");\nconst { Tokenizer } = require(\"./tokenizer\");\n\nconst {\n  includeDetector,\n  macroDefinitionDetector,\n  functionSignatureDetector,\n} = require(\"./regularExpression\");\n\nfunction CLikeInterpreterUtilities(code) {\n  this.getMacroMap = () => {\n    let matcheMap = new Map();\n    let matches;\n    while ((matches = macroDefinitionDetector.exec(code))) {\n      matcheMap.set(matches[1], matches[2]);\n    }\n    return matcheMap;\n  };\n  function getEndIndex(params) {\n    let length = 0;\n    for (let i = 1; i < 4; i++) {\n      if (params[i]) {\n        length += params[i].length;\n      }\n    }\n    return length;\n  }\n\n  function extractBody(functionSignEndsAt) {\n    let startOfBody = functionSignEndsAt;\n    let braceBalance = 1;\n    let endOfBody = startOfBody + 1;\n    for (; braceBalance !== 0; endOfBody++) {\n      if (code[endOfBody] == \"{\") braceBalance++;\n      else if (code[endOfBody] == \"}\") braceBalance--;\n    }\n    console.log(startOfBody, endOfBody);\n    let functionBody = \"\";\n    for (let i = startOfBody; i < endOfBody; i++) {\n      functionBody += code[i];\n    }\n\n    let statements = functionBody.split(\";\");\n    return { statements, endOfBody };\n  }\n\n  this.indexVsLine = [0];\n  this.mapIndexVsLine = () => {\n    for (let i = 0; i < code.length; i++) {\n      if (code[i] == \"\\n\") {\n        this.indexVsLine.push(i);\n      }\n    }\n    let lastIndex = code.length - 1;\n    if (code[lastIndex] != \"\\n\") this.indexVsLine.push(lastIndex);\n    //console.log(this.indexVsLine);\n  };\n  this.getLineColumn = index => {\n    for (let i = 1; i < this.indexVsLine.length; i++) {\n      if (index <= this.indexVsLine[i]) {\n        console.log(i, index - this.indexVsLine[i - 1] + 1);\n        return {\n          line: i,\n          ch: index - this.indexVsLine[i - 1] + 1,\n        };\n      }\n    }\n    console.log(\"invalid index\");\n  };\n\n  this.createFunctionMap = () => {\n    let intermediateCode = {};\n    let func;\n    while ((func = functionSignatureDetector.exec(code))) {\n      //console.log(func);\n      const startOfBody = functionSignatureDetector.lastIndex - 1;\n      const { statements, endOfBody } = extractBody(startOfBody);\n      //func[4] contains function name\n      const { tokenizeBody, tokenizeParameters, flowGraph } = new Tokenizer(\n        statements,\n        this,\n        func[4]\n      );\n      let parameters = tokenizeParameters(func.index, func);\n\n      functionSignatureDetector.lastIndex = endOfBody;\n      tokenizeBody(startOfBody, 0);\n      flowGraph.forEach((el, index) => console.log(index, el));\n      intermediateCode[func[4].trim()] = {\n        parameters,\n        body: flowGraph,\n      };\n    }\n    console.log(intermediateCode);\n    //console.log(JSON.stringify(intermediateCode));\n    return intermediateCode;\n    //return JSON.stringify(intermediateCode);\n  };\n}\n\n// let inpr = new CLikeInterpreterUtilities(code);\n// //inpr.getMacroMap();\n// inpr.mapIndexVsLine();\n// console.log(\"line col\");\n// inpr.getLineColumn(58);\n// inpr.createFunctionMap();\n\nmodule.exports = {\n  CLikeInterpreterUtilities,\n};\n","//const express = require(\"express\");\nconst {\n  functionCallDetector,\n  functionParamsDetector,\n  partialForLoopDetector,\n  forloopDetector,\n  whileloopDetector,\n  ifDetector,\n  elseDetector,\n  elseIfDetector,\n  variableDetector,\n  expressionDetector,\n  returnStatementDetector,\n} = require(\"./regularExpression\");\n\nconst {\n  ExpressionWrapper,\n  ConditionWrapper,\n  VariableWrapper,\n  ReturnWrapper,\n  FunctionWrapper,\n  LibFunctionWrapper,\n} = require(\"./tokenWrappers\");\n\n//debugging\n\n//temporary array\nconst libFunctions = [\"printf\", \"scanf\"];\n\nfunction Tokenizer(statements, self, functionName) {\n  this.lastTokenStack = [];\n  this.statementDetails = null;\n  this.from = null;\n  this.to = null;\n  this.flowGraph = [];\n  this.unspecifiedJumps = [];\n  this.currentPos = 0;\n  this.tokenizeBody = (startOfBody, firstStatementIndex) => {\n    this.currentPos = startOfBody;\n\n    console.log(\"In function \" + functionName);\n    for (let i = firstStatementIndex; i < statements.length; i++) {\n      let statement = statements[i];\n      if ((this.statementDetails = statement.match(\"}\"))) {\n        console.log(\"end of previous body detected: \");\n        // statements[i] = statements[i].slice(this.statementDetails[0].length);\n        statements[i] = statements[i].replace(\"}\", \" \");\n\n        console.log(\">>>\", statement[0].length);\n        //this.flowGraph.forEach((el, index) => console.log(index, el));\n        return i;\n      }\n      if (statement.match(partialForLoopDetector)) {\n        console.log(\"for loop detected: \");\n        i = this.tokenizeForLoop(i);\n      } else if ((this.statementDetails = statement.match(whileloopDetector))) {\n        console.log(\"while loop detected: \");\n        i = this.tokenizeWhileLoop(i);\n      } else if ((this.statementDetails = statement.match(ifDetector))) {\n        i = this.tokenizeIfElseLadder(i);\n      } else if (\n        (this.statementDetails = statement.match(returnStatementDetector))\n      ) {\n        this.tokenizeReturnStatement();\n      } else if (\n        (this.statementDetails = statement.match(functionCallDetector))\n      ) {\n        this.tokenizeFunctionCall();\n      } else if (\n        (this.statementDetails = statement.match(expressionDetector))\n      ) {\n        this.tokenizeExpression();\n      } else if ((this.statementDetails = statement.match(variableDetector))) {\n        this.tokenizeVariable();\n      } else if (statement.match(\"break\")) {\n        console.log(\"break\");\n      } else if (statement.match(\"continue\")) {\n        console.log(\"continue\");\n      } else {\n        console.log(\"cant detected it: \");\n        console.log(statement);\n      }\n\n      //console.log(statement);\n    }\n    console.log(\"flow graph\");\n  };\n  //sets the starting and the ending position of a token\n  this.setFromTo = () => {\n    this.currentPos += this.statementDetails.index;\n    this.from = self.getLineColumn(this.currentPos);\n    this.currentPos += this.statementDetails[0].length;\n    this.to = self.getLineColumn(this.currentPos);\n  };\n  this.tokenizeFunctionCall = () => {\n    console.log(\"function detected: \");\n    console.log(this.statementDetails);\n    let functionName = this.statementDetails[1].trim();\n    let args = this.statementDetails[2].split(\",\").map(arg => arg.trim());\n    this.setFromTo();\n    this.currentPos++; //for semicolon\n    let type = \"function_call\";\n    if (libFunctions.find(name => name == functionName)) {\n      type = \"lib_function_call\";\n    }\n    this.flowGraph.push(\n      new FunctionWrapper(\n        {\n          type,\n          functionName,\n          args,\n        },\n        this.from,\n        this.to\n      )\n    );\n  };\n  this.tokenizeVariable = () => {\n    console.log(\"variable detected: \");\n    this.setFromTo();\n    this.currentPos++; //for semicolon\n    console.log(this.statementDetails);\n    this.flowGraph.push(\n      new VariableWrapper(this.statementDetails, this.from, this.to)\n    );\n  };\n  this.tokenizeExpression = () => {\n    console.log(\"expression detected: \");\n    console.log(this.statementDetails);\n    let expression = this.statementDetails[0].trim();\n    this.setFromTo();\n    this.currentPos++; //for semicolon\n    this.flowGraph.push(new ExpressionWrapper(expression, this.from, this.to));\n  };\n  this.tokenizeReturnStatement = () => {\n    console.log(this.statementDetails);\n    this.setFromTo();\n    this.currentPos++; //for counting the semicolon\n    this.flowGraph.push(\n      new ReturnWrapper(\n        {\n          value: this.statementDetails[1],\n          returnType: \"int\", //explicitly setting for temporary purpose\n        },\n        this.from,\n        this.to\n      )\n    );\n  };\n  this.tokenizeParameters = (column, func) => {\n    //console.log('line number', lineCount);\n    // console.log('start column', column);\n    //console.log(`Function name ${func[4]}\\n Parameter ${func[6]}`);\n    //console.log(func);\n    let params;\n    let paramsList = [];\n    while ((params = functionParamsDetector.exec(func[0]))) {\n      //console.log(params);\n      paramsList.push({\n        name: params[4],\n        datatype: params[1] + (params[2] ? params[2] : \"\"),\n        from: self.getLineColumn(params.index + column),\n        to: self.getLineColumn(functionParamsDetector.lastIndex + column),\n      });\n    }\n    console.log(paramsList);\n    return paramsList;\n  };\n  this.tokenizeForLoopInitialization = statement => {\n    this.statementDetails = statement.match(/\\(.+/);\n    this.setFromTo();\n    this.currentPos++; //for counting the semicolon\n    this.flowGraph.push(\n      new ExpressionWrapper(\n        this.statementDetails[0].slice(1),\n        this.from,\n        this.to\n      )\n    );\n  };\n  this.tokenizeCondition = condition => {\n    this.from = self.getLineColumn(this.currentPos);\n    this.currentPos += condition.length;\n    this.to = self.getLineColumn(this.currentPos);\n    this.currentPos++; //for semicolon\n    this.flowGraph.push(new ConditionWrapper(condition, this.from, this.to));\n    return this.flowGraph.length - 1;\n  };\n  this.tokenizeForLoopIncrementDecrement = (statement, pendingTaskArr) => {\n    this.statementDetails = statement.match(/.+\\)/);\n    let incrementDecrement = this.statementDetails[0].slice(0, -1);\n    this.setFromTo();\n    this.currentPos++; //for closing bracket\n    pendingTaskArr.push(\n      new ExpressionWrapper(incrementDecrement, this.from, this.to)\n    );\n    let firstStatementOfForLoopBody = statement.slice(\n      incrementDecrement.length + 1\n    );\n    return firstStatementOfForLoopBody;\n  };\n  this.tokenizeForLoop = i => {\n    let pendingTaskArr = [];\n    this.tokenizeForLoopInitialization(statements[i]);\n    let conditionIndexInFlowGraph = this.tokenizeCondition(statements[++i]);\n    let firstStatementOfForLoopBody = this.tokenizeForLoopIncrementDecrement(\n      statements[++i],\n      pendingTaskArr\n    );\n    statements[i] = firstStatementOfForLoopBody;\n    if (!statements[i].match(\"{\")) {\n      statements[i + 1] = \"}\".concat(statements[i + 1]);\n      this.currentPos--; //to uncount the explicitly added '}'\n    }\n\n    let bodyEndsAtIndex = this.tokenizeBody(this.currentPos, i) - 1;\n\n    pendingTaskArr.forEach(token => this.flowGraph.push(token));\n    this.flowGraph.push({\n      type: \"jump\",\n      /*because i is currently holding the index of increment-decrement token, \n      so i - 1 will be the index of condition token*/\n      instruction: i - 1,\n    });\n    this.flowGraph[conditionIndexInFlowGraph].nextIfFalse =\n      this.flowGraph.length;\n\n    return bodyEndsAtIndex;\n  };\n  this.tokenizeWhileLoop = i => {\n    let conditionStartsAtIndex = statements[i].match(/\\(/).index;\n    this.currentPos += conditionStartsAtIndex;\n    let conditionIndexInFlowGraph = this.tokenizeCondition(\n      this.statementDetails[1]\n    );\n    if (!statements[i].match(\"{\")) {\n      statements[i + 1] = \"}\".concat(statements[i + 1]);\n      this.currentPos--; //to uncount the explicitly added '}'\n    }\n    let bodyStartsAt = statements[i].match(/\\)/);\n    console.log(bodyStartsAt);\n    statements[i] = statements[i].slice(bodyStartsAt.index + 1);\n    console.log(\">>>\", statements[i]);\n    let bodyEndsAtIndex = this.tokenizeBody(this.currentPos, i) - 1;\n    this.flowGraph.push({\n      type: \"jump\",\n      /*because i is currently holding the index condition token*/\n      instruction: i,\n    });\n\n    this.flowGraph[conditionIndexInFlowGraph].nextIfFalse =\n      this.flowGraph.length;\n\n    return bodyEndsAtIndex;\n  };\n  this.addEndOfCurlyBraceAtBegining = i => {\n    statements[i] = \"}\".concat(statements[i]);\n    this.currentPos--; //to uncount the explicitly added '}'\n  };\n  this.tokenizeIfElseLadder = i => {\n    let conditionStartsAtIndex = statements[i].match(/\\(/).index;\n    this.currentPos += conditionStartsAtIndex;\n\n    let conditionIndexInFlowGraph = this.tokenizeCondition(\n      this.statementDetails[1]\n    );\n    if (!statements[i].match(\"{\")) {\n      this.addEndOfCurlyBraceAtBegining(i + 1);\n    }\n    let bodyStartsAt = statements[i].match(/\\)/);\n    statements[i] = statements[i].slice(bodyStartsAt.index + 1);\n    console.log(\"if body\", statements[i]);\n    let bodyEndsAtIndex = this.tokenizeBody(this.currentPos, i) - 1;\n    i = bodyEndsAtIndex + 1;\n\n    this.flowGraph.push({\n      type: \"jump\",\n      instruction: null,\n    });\n    let prevUnspecifiedJump = this.flowGraph.length - 1;\n    this.flowGraph[conditionIndexInFlowGraph].nextIfFalse =\n      this.flowGraph.length + 1;\n\n    this.unspecifiedJumps.push(bodyEndsAtIndex);\n    if ((this.statementDetails = statements[i].match(elseIfDetector))) {\n      i = this.tokenizeIfElseLadder(i);\n    } else if ((this.statementDetails = statements[i].match(elseDetector))) {\n      if (!statements[i].match(\"{\")) {\n        this.addEndOfCurlyBraceAtBegining(i + 1);\n      }\n      i = this.tokenizeBody(this.currentPos, i);\n      this.flowGraph.push({\n        type: \"jump\",\n        instruction: null,\n      });\n      this.flowGraph[this.flowGraph.length - 1].instruction =\n        this.flowGraph.length;\n    }\n    this.flowGraph[prevUnspecifiedJump].instruction = this.flowGraph.length;\n    //console.log(this.flowGraph);\n    return i;\n  };\n}\n\nmodule.exports = {\n  Tokenizer,\n};\n"],"sourceRoot":""}